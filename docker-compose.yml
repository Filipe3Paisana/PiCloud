services:
  web1:
    image: nginx:latest
    container_name: web1
    volumes:
      - ./WEB/html:/usr/share/nginx/html
    networks:
      - picloud_network

  web2:
    image: nginx:latest
    container_name: web2
    volumes:
      - ./WEB/html:/usr/share/nginx/html
    networks:
      - picloud_network

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx-container
    ports:
      - "8080:80"
    depends_on:
      - web1
      - web2
      - api
    command: ["/usr/local/bin/wait-for-it.sh", "api:8080", "--", "nginx", "-g", "daemon off;"]
    networks:
      - picloud_network

  api:
    build:
      context: ./api_service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/picloud_db
      - PORT=8080
    networks:
      - picloud_network

  db:
    image: postgres:13
    container_name: picloud_db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=picloud_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - picloud_network

  api_migrations:
    build:
      context: ./api_service
      dockerfile: Dockerfile.migrations
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/picloud_db
    networks:
      - picloud_network

  node1:
    build:
      context: ./node_service
      dockerfile: Dockerfile
    ports:
      - "8082:8081"
    volumes:
      - node_data1:/app/fragments
    networks:
      - picloud_network

  node2:
    build:
      context: ./node_service
      dockerfile: Dockerfile
    ports:
      - "8083:8081"
    volumes:
      - node_data2:/app/fragments
    networks:
      - picloud_network

networks:
  picloud_network:

volumes:
  db_data:
  node_data1:
  node_data2:
